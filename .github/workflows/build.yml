# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Docker login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_HOST }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Cache node packages
        id: node-cache
        uses: actions/cache@v3
        with:
          path: app/node_modules
          key: node_${{ hashFiles('app/package-lock.json') }}
      - name: Create cache dirs
        run: mkdir -p app/node_modules && sudo chown -R 1000:1000 app/node_modules
      - name: Build
        run: make ci-build
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './app/build'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
